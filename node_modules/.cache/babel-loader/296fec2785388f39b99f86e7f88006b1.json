{"ast":null,"code":"var _jsxFileName = \"/Users/joaquin/Developer/React/DAWR/osu-stalker-2/src/views/Player.js\";\nimport React, { Component } from \"react\";\nimport UserData from \"../components/UserData.js\";\nimport UserBest from \"../components/UserBest.js\";\nimport \"../styles/App.css\";\nconst apiLink = \"https://osu.ppy.sh/api/\";\nconst userBest = 'get_user_best?';\nconst userData = \"get_user?\";\nconst apiKey = 'k=a79d9c01a3b012fc0c0bab91aaa7d09e8b76492b';\n\nconst axios = require(\"axios\");\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerName: \"Catulus\",\n      gamemode: 1,\n      playerData: null,\n      playerBest: null\n    };\n    this.nameChange = this.nameChange.bind(this);\n    this.modeChange = this.modeChange.bind(this);\n    this.fetchAPI = this.fetchAPI.bind(this);\n    this.fetchUser = this.fetchUser.bind(this);\n    this.fetchBest = this.fetchBest.bind(this);\n  }\n\n  nameChange(event) {\n    console.log(\"New username: \" + event.target.value);\n    this.setState({\n      playerName: event.target.value\n    });\n  }\n\n  modeChange(event) {\n    console.log(\"New gamemode: \" + event.target.value);\n    this.setState({\n      gamemode: event.target.value\n    });\n  }\n\n  fetchAPI(event) {\n    event.preventDefault();\n    this.fetchUser().then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        playerData: result.data[0]\n      });\n    });\n    this.fetchBest().then(result => {\n      console.log(result.data);\n      this.setState({\n        playerBest: result.data\n      });\n    });\n  }\n\n  fetchUser() {\n    console.log(\"API call: Fetch user data\");\n    const userUrl = apiLink + userData + apiKey + \"&u=\" + this.state.playerName + \"&m=\" + this.state.gamemode + \"&type=string\";\n    return axios.get(userUrl);\n  }\n\n  fetchBest() {\n    console.log(\"API call: Fetch player best plays\");\n    const bestUrl = apiLink + userBest + apiKey + \"&u=\" + this.state.playerName + \"&limit=10&m=\" + this.state.gamemode + \"&type=string\";\n    return axios.get(bestUrl);\n  }\n\n  makeBestPlays(data, gamemode) {\n    let best = [];\n\n    for (let i = 0; i < 10; i++) {\n      best.push(React.createElement(UserBest, {\n        info: data[0],\n        mode: gamemode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n\n    return best;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.fetchAPI,\n      style: {\n        position: \"relative\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        margin: \"auto auto auto 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Search by player\"), React.createElement(\"span\", {\n      className: \"fas fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"username\",\n      defaultValue: this.state.playerName,\n      onChange: this.nameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"mode\",\n      defaultValue: \"1\",\n      onChange: this.modeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"osu!\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"osu!taiko\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"osu!catch\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"osu!mania\")), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      id: \"SubmitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), this.state.playerData ? React.createElement(UserData, {\n      info: this.state.playerData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.playerBest ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"Subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Best Performance\"), React.createElement(UserBest, {\n      info: this.state.playerBest[0],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[1],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[2],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[3],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[4],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[5],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[6],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[7],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[8],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(UserBest, {\n      info: this.state.playerBest[9],\n      mode: this.state.gamemode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/joaquin/Developer/React/DAWR/osu-stalker-2/src/views/Player.js"],"names":["React","Component","UserData","UserBest","apiLink","userBest","userData","apiKey","axios","require","Player","constructor","props","state","playerName","gamemode","playerData","playerBest","nameChange","bind","modeChange","fetchAPI","fetchUser","fetchBest","event","console","log","target","value","setState","preventDefault","then","result","data","userUrl","get","bestUrl","makeBestPlays","best","i","push","render","position","width","margin"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\n\nimport UserData from \"../components/UserData.js\"\nimport UserBest from \"../components/UserBest.js\"\n\nimport \"../styles/App.css\"\n\nconst apiLink = \"https://osu.ppy.sh/api/\"\nconst userBest = 'get_user_best?'\nconst userData = \"get_user?\"\nconst apiKey = 'k=a79d9c01a3b012fc0c0bab91aaa7d09e8b76492b'\n\nconst axios = require(\"axios\")\n\nexport default class Player extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerName: \"Catulus\",\n            gamemode: 1,\n            playerData: null,\n            playerBest: null\n        }\n        this.nameChange = this.nameChange.bind(this)\n        this.modeChange = this.modeChange.bind(this)\n        this.fetchAPI = this.fetchAPI.bind(this)\n        this.fetchUser = this.fetchUser.bind(this)\n        this.fetchBest = this.fetchBest.bind(this)\n    }\n\n    nameChange(event) {\n        console.log(\"New username: \" + event.target.value)\n        this.setState({playerName: event.target.value})\n    }\n\n    modeChange(event) {\n        console.log(\"New gamemode: \" + event.target.value)\n        this.setState({gamemode: event.target.value})\n    }\n\n    fetchAPI(event) {\n        event.preventDefault()\n        this.fetchUser().then(result => {\n            console.log(result.data[0])\n            this.setState({\n                playerData: result.data[0],\n            })\n        })\n        this.fetchBest().then(result => {\n            console.log(result.data)\n            this.setState({\n                playerBest: result.data\n            })\n        })\n    }\n\n    fetchUser() {\n        console.log(\"API call: Fetch user data\")\n        const userUrl = apiLink + userData + apiKey + \"&u=\" + this.state.playerName + \"&m=\" + this.state.gamemode + \"&type=string\"\n        return axios.get(userUrl)\n    }\n\n    fetchBest() {\n        console.log(\"API call: Fetch player best plays\")\n        const bestUrl = apiLink + userBest + apiKey + \"&u=\" + this.state.playerName + \"&limit=10&m=\" + this.state.gamemode + \"&type=string\"\n        return axios.get(bestUrl)\n    }\n\n    makeBestPlays(data, gamemode) {\n        let best = []\n        for (let i = 0; i < 10; i++) {\n            best.push(<UserBest info={data[0]} mode={gamemode} />)\n        }\n        return best\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"Subtitle\">\n                    <form onSubmit={this.fetchAPI} style={{position: \"relative\", width: \"100%\"}}>\n                        <span style={{margin: \"auto auto auto 0\"}}>Search by player</span>\n                        <span className=\"fas fa-search\"></span>\n                        <input name=\"username\" type=\"text\" placeholder=\"username\" defaultValue={this.state.playerName} onChange={this.nameChange}/>\n                        <select name=\"mode\" defaultValue= \"1\" onChange={this.modeChange}>\n                            <option value=\"0\">osu!</option>\n                            <option value=\"1\">osu!taiko</option>\n                            <option value=\"2\">osu!catch</option>\n                            <option value=\"3\">osu!mania</option>\n                        </select>\n                        <input type=\"submit\" value=\"Search\" id=\"SubmitButton\" />\n                    </form>\n                </div>\n                {this.state.playerData ?\n                    <UserData info={this.state.playerData} /> :\n                    <div />\n                }\n                {this.state.playerBest ?\n                    <div>\n                        <span className=\"Subtitle\">Best Performance</span>\n                        <UserBest info={this.state.playerBest[0]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[1]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[2]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[3]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[4]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[5]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[6]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[7]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[8]} mode={this.state.gamemode} />\n                        <UserBest info={this.state.playerBest[9]} mode={this.state.gamemode} />\n                    </div>:\n                    <div />\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}